{"version":3,"sources":["components/Togglable.js","components/Blog.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","openButtonLabel","className","closeButtonLabel","children","displayName","Blog","blog","likeBlog","deleteBlog","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","url","likes","id","user","name","Notification","notificationMessage","messageType","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","type","value","onChange","autoComplete","BlogForm","createBlog","newBlogTitle","setNewBlogTitle","newBlogAuthor","setNewBlogAuthor","newBlogUrl","setNewBlogUrl","event","preventDefault","htmlFor","target","text","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","remove","delete","setToken","newToken","login","credentials","App","blogs","setBlogs","setNotificationMessage","setMessageType","setUsername","setPassword","setUser","useEffect","blogService","initialBlogs","loggedUserJSON","window","localStorage","getItem","JSON","parse","confirm","setTimeout","concat","handleLogin","console","log","loginService","setItem","stringify","handleLogout","removeItem","exception","noteFormRef","useRef","blogObject","current","returnedBlog","catch","sort","b","map","key","ReactDOM","render","document","getElementById"],"mappings":"gQAGMA,EAAYC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EACnBC,oBAAS,GADU,mBAC1CC,EAD0C,KACjCC,EADiC,KAG3CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IASd,OANAM,8BAAoBR,GAAK,WACvB,MAAO,CACLO,uBAKF,6BACE,0BAAME,MAAOL,GACX,4BAAQM,QAASH,GACdR,EAAMY,kBAEX,0BAAMF,MAAOH,GACX,4BAAQI,QAASH,EAAkBK,UAAU,oBAAoBb,EAAMc,kBAA0B,6BAChGd,EAAMe,cAUflB,EAAUmB,YAAc,YAETnB,QCZAoB,EAxBF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAU9B,OACE,yBAAKV,MATW,CAChBW,WAAY,GACZC,YAAa,EACbC,OAAQ,QACRC,YAAa,EACbC,aAAc,GAISZ,UAAU,QAC9BK,EAAKQ,MADR,MACkBR,EAAKS,OACrB,kBAAC,EAAD,CAAWf,gBAAgB,OAAOE,iBAAiB,QAChDI,EAAKU,IAAI,6BADZ,SAESV,EAAKW,MAAM,4BAAQlB,QAAS,kBAAMQ,EAASD,EAAKY,GAAIZ,KAAzC,QAA6D,6BAC9EA,EAAKa,KAAKC,KAAK,6BAChB,4BAAQrB,QAAS,kBAAMS,EAAWF,EAAKY,GAAIZ,KAA3C,aCGOe,EApBM,SAAC,GAGf,IAFLC,EAEI,EAFJA,oBACAC,EACI,EADJA,YAEA,MAA4B,KAAxBD,EACK,KAIP,yBAAKrB,UAAWsB,GACbD,ICqCQE,EA/CG,SAAC,GAMZ,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,0BAAMX,GAAG,YAAYY,SAAUL,GAC7B,qDAEA,wCAEE,2BACEP,GAAG,WACHa,KAAK,OACLC,MAAOJ,EACPR,KAAK,WACLa,SAAUP,EAEVQ,aAAa,sBAGjB,wCAEE,2BACEhB,GAAG,WACHa,KAAK,WACLC,MAAOH,EACPT,KAAK,WACLa,SAAUN,EAEVO,aAAa,sBAGjB,4BAAQhB,GAAG,eAAea,KAAK,UAA/B,WCUSI,EA9CE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAEK9C,mBAAS,IAFd,mBAE5B+C,EAF4B,KAEdC,EAFc,OAGOhD,mBAAS,IAHhB,mBAG5BiD,EAH4B,KAGbC,EAHa,OAIClD,mBAAS,IAJV,mBAI5BmD,EAJ4B,KAIhBC,EAJgB,KAkBnC,OACE,0BAAMZ,SAbQ,SAACa,GACfA,EAAMC,iBACNR,EAAW,CACTtB,MAAOuB,EACPtB,OAAQwB,EACRvB,IAAKyB,IAEPH,EAAgB,IAChBE,EAAiB,IACjBE,EAAc,MAKZ,0CACA,2BAAOG,QAAQ,gBAAf,SACA,2BACE3B,GAAG,eACHc,MAAOK,EACPJ,SAAU,gBAAGa,EAAH,EAAGA,OAAH,OAAgBR,EAAgBQ,EAAOd,UANrD,IAOK,6BACH,2BAAOa,QAAQ,iBAAf,UACA,2BACE3B,GAAG,gBACHa,KAAK,OACLC,MAAOO,EACPN,SAAU,gBAAGa,EAAH,EAAGA,OAAH,OAAgBN,EAAiBM,EAAOd,UAbtD,IAcK,6BACH,2BAAOa,QAAQ,cAAf,OACA,2BACE3B,GAAG,aACH6B,KAAK,MACLf,MAAOS,EACPR,SAAU,gBAAGa,EAAH,EAAGA,OAAH,OAAgBJ,EAAcI,EAAOd,UApBnD,IAqBK,6BACH,4BAAQd,GAAG,gBAAgBa,KAAK,UAAhC,Y,gBCxCFiB,EAAQ,KAuCG,GAAEC,OAjCF,WAEb,OADgBC,IAAMC,IATR,cAUCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SA+BlBC,OA5Bb,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAFf,SAKUE,IAAMW,KAlBf,aAkB6BL,EAAWE,GALzC,cAKPL,EALO,yBAMNA,EAASC,MANH,2CAAH,sDA4BqBQ,OAnBrB,uCAAG,WAAO5C,EAAIsC,GAAX,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAFf,SAKUE,IAAMa,IAAN,UA3BT,aA2BS,YAAwB7C,GAAMsC,EAAWE,GALnD,cAKPL,EALO,yBAONA,EAASC,MAPH,2CAAH,wDAmB6BU,OAT7B,uCAAG,WAAO9C,GAAP,iBAAAuC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAFf,SAKUE,IAAMe,OAAN,UArCT,aAqCS,YAA2B/C,GAAMwC,GAL3C,cAKPL,EALO,yBAMNA,EAASC,MANH,2CAAH,sDASqCY,SArChC,SAAAC,GACfnB,EAAK,iBAAamB,KCEL,GAAEC,MALN,uCAAG,WAAMC,GAAN,eAAAZ,EAAA,sEACWP,IAAMW,KAHf,aAG6BQ,GAD/B,cACNhB,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDC4LIgB,EAtLH,WAAO,IAAD,EACUhF,mBAAS,IADnB,mBACTiF,EADS,KACFC,EADE,OAGsClF,mBAAS,MAH/C,mBAGTgC,EAHS,KAGYmD,EAHZ,OAIsBnF,mBAAS,MAJ/B,mBAITiC,EAJS,KAIImD,EAJJ,OAKgBpF,mBAAS,IALzB,mBAKTsC,EALS,KAKC+C,EALD,OAMgBrF,mBAAS,IANzB,mBAMTuC,EANS,KAMC+C,EAND,OAOQtF,mBAAS,MAPjB,mBAOT6B,EAPS,KAOH0D,EAPG,KAShBC,qBAAU,WACRC,EACG9B,SACAG,MAAK,SAAA4B,GAAY,OAChBR,EAASQ,QAEZ,IAEHF,qBAAU,WACR,IAAMG,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAM9D,EAAOkE,KAAKC,MAAML,GACxBJ,EAAQ1D,GACR4D,EAAYb,SAAS/C,EAAK6B,UAE3B,IAGH,IAqBMxC,EAAU,uCAAG,WAAOU,EAAIZ,GAAX,SAAAmD,EAAA,0DACAyB,OAAOK,QAAQ,cAAejF,EAAKQ,MAAO,OAAQR,EAAKS,QADvD,0CAMPgE,EACHf,OAAO9C,GAPG,OAQbwD,EAAe,WACfD,EAAuB,8BACvBe,YAAW,WACTf,EAAuB,QACtB,KAZU,kDAebC,EAAe,SACfD,EAAuB,8BACvBe,YAAW,WACTf,EAAuB,QACtB,KAnBU,0DAAH,wDA0BVlE,EAAQ,uCAAG,WAAOW,EAAIZ,GAAX,SAAAmD,EAAA,+EAGPsB,EACHjB,OAAO5C,EAAI,CAAE,QAAWZ,EAAKW,QAJnB,OAKbyD,EAAe,WACfD,EAAuB,mBAAmBgB,OAAOnF,EAAKQ,QACtD0E,YAAW,WACTf,EAAuB,QACtB,KATU,kDAWXnE,EAAKW,MACPyD,EAAe,SACfD,EAAuB,4BACvBe,YAAW,WACTf,EAAuB,QACtB,KAhBU,yDAAH,wDAoBRiB,EAAW,uCAAG,WAAO/C,GAAP,eAAAc,EAAA,6DAClBd,EAAMC,iBACN+C,QAAQC,IAAI,kBAAmBhE,EAAUC,GAFvB,kBAKGgE,EAAazB,MAAM,CACpCxC,WAAUC,aANI,OAKVV,EALU,OAQhBuD,EAAe,WACfD,EAAuB,oBACvBe,YAAW,WACTf,EAAuB,QACtB,KAEHS,OAAOC,aAAaW,QAClB,oBAAqBT,KAAKU,UAAU5E,IAEtC4D,EAAYb,SAAS/C,EAAK6B,OAC1B6B,EAAQ1D,GACRwD,EAAY,IACZC,EAAY,IApBI,kDAsBhBF,EAAe,SACfD,EAAuB,qBACvBe,YAAW,WACTf,EAAuB,QACtB,KA1Ba,0DAAH,sDA8BXuB,EAAY,uCAAG,WAAOrD,GAAP,SAAAc,EAAA,sDACnBd,EAAMC,iBACN+C,QAAQC,IAAI,iBAAkBhE,EAAU,MACxC,IACEsD,OAAOC,aAAac,WAAW,qBAE/BlB,EAAYb,SAAS,MACrBW,EAAQ,MACRF,EAAY,IACZC,EAAY,IACZ,MAAOsB,GACPxB,EAAe,SACfD,EAAuB,oBACvBe,YAAW,WACTf,EAAuB,QACtB,KAfc,2CAAH,sDAkBZ0B,EAAcC,mBAGpB,OACE,6BACE,kBAAC,EAAD,CAAc9E,oBAAqBA,GAAuB,GAAIC,YAAaA,GAAe,KAEhF,OAATJ,EACC,kBAAC,EAAD,CACES,SAAUA,EACVC,SAAUA,EACVH,qBAAsB,gBAAGoB,EAAH,EAAGA,OAAH,OAAgB6B,EAAY7B,EAAOd,QACzDL,qBAAsB,gBAAGmB,EAAH,EAAGA,OAAH,OAAgB8B,EAAY9B,EAAOd,QACzDP,aAAciE,IAEhB,6BACE,qCACA,2BACGvE,EAAKC,KADR,aAEE,4BAAQrB,QAASiG,GAAjB,WAEF,kBAAC,EAAD,CAAWhG,gBAAgB,WAAWE,iBAAiB,SAASb,IAAK8G,GACnE,kBAAC,EAAD,CAAU/D,WAzIJ,SAACiE,GACfF,EAAYG,QAAQ1G,mBACpBmF,EACGxB,OAAO8C,GACPjD,MAAK,SAAAmD,GACJ/B,EAASD,EAAMkB,OAAOc,IACtB7B,EAAe,WACfD,EAAuB,eAAegB,OAAOY,EAAWvF,MAAO,OAAQuF,EAAWtF,OAAQ,YAC1FyE,YAAW,WACTf,EAAuB,QACtB,QAEJ+B,OAAM,WACL9B,EAAe,SACfD,EAAuB,kCACvBe,YAAW,WACTf,EAAuB,QACtB,YA2HD,yBAAKvD,GAAG,aACLqD,EACEkC,MAAK,SAAChD,EAAGiD,GAAJ,OAAWjD,EAAExC,MAAQyF,EAAEzF,MAAQ,GAAK,KACzC0F,KAAI,SAAArG,GAAI,OACP,kBAAC,EAAD,CAAMsG,IAAKtG,EAAKY,GAAIZ,KAAMA,EAAMC,SAAUA,EAAUC,WAAYA,W,MC/KhFqG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a72f8dc3.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <span style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>\n          {props.openButtonLabel}</button>\n      </span>\n      <span style={showWhenVisible}>\n        <button onClick={toggleVisibility} className=\"togglableContent\">{props.closeButtonLabel}</button><br />\n        {props.children}\n      </span>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  openButtonLabel: PropTypes.string.isRequired,\n  closeButtonLabel: PropTypes.string.isRequired\n}\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React from 'react'\nimport Togglable from './Togglable'\n\nconst Blog = ({ blog, likeBlog, deleteBlog }) => {\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  return (\n    <div style={blogStyle} className='blog'>\n      {blog.title} - {blog.author}\n      <Togglable openButtonLabel='view' closeButtonLabel='hide'>\n        {blog.url}<br />\n        likes {blog.likes}<button onClick={() => likeBlog(blog.id, blog)}>like</button><br />\n        {blog.user.name}<br />\n        <button onClick={() => deleteBlog(blog.id, blog)}>delete</button>\n      </Togglable>\n    </div>\n\n  )\n}\n\nexport default Blog","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Notification = ({\n  notificationMessage,\n  messageType\n}) => {\n  if (notificationMessage === '') {\n    return null\n  }\n\n  return (\n    <div className={messageType}>\n      {notificationMessage}\n    </div>\n  )\n}\n\nNotification.propTypes = {\n  notificationMessage: PropTypes.string.isRequired,\n  messageType: PropTypes.string.isRequired\n}\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <form id='loginForm' onSubmit={handleSubmit}>\n      <h2>log in to application</h2>\n\n      <div>\n        username\n        <input\n          id='username'\n          type='text'\n          value={username}\n          name='username'\n          onChange={handleUsernameChange}\n          // onChange={({ target }) => setUsername(target.value)}\n          autoComplete='current-username'\n        />\n      </div>\n      <div>\n        password\n        <input\n          id='password'\n          type='password'\n          value={password}\n          name='password'\n          onChange={handlePasswordChange}\n          // onChange={({ target }) => setPassword(target.value)}\n          autoComplete='current-password'\n        />\n      </div>\n      <button id='login-button' type='submit'>login</button>\n    </form>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BlogForm = ({ createBlog }) => {\n\n  const [newBlogTitle, setNewBlogTitle] = useState('')\n  const [newBlogAuthor, setNewBlogAuthor] = useState('')\n  const [newBlogUrl, setNewBlogUrl] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newBlogTitle,\n      author: newBlogAuthor,\n      url: newBlogUrl\n    })\n    setNewBlogTitle('')\n    setNewBlogAuthor('')\n    setNewBlogUrl('')\n  }\n\n  return (\n    <form onSubmit={addBlog}>\n      <h2>Create new</h2>\n      <label htmlFor='newBlogTitle'>Title</label>\n      <input\n        id='newBlogTitle'\n        value={newBlogTitle}\n        onChange={({ target }) => setNewBlogTitle(target.value)}\n      /> <br />\n      <label htmlFor='newBlogAuthor'>Author</label>\n      <input\n        id='newBlogAuthor'\n        type='text'\n        value={newBlogAuthor}\n        onChange={({ target }) => setNewBlogAuthor(target.value)}\n      /> <br />\n      <label htmlFor='newBlogUrl'>URL</label>\n      <input\n        id='newBlogUrl'\n        text='url'\n        value={newBlogUrl}\n        onChange={({ target }) => setNewBlogUrl(target.value)}\n      /> <br />\n      <button id='submitNewNote' type='submit'>create</button>\n    </form>\n  )\n}\n\nexport default BlogForm\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n  // return request.then(response => response.data)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [messageType, setMessageType] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs =>\n        setBlogs(initialBlogs)\n      )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n\n  const addBlog = (blogObject) => {\n    noteFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setMessageType('success')\n        setNotificationMessage('a new blog: '.concat(blogObject.title, ' by ', blogObject.author, ' added.'))\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n      .catch(() => {\n        setMessageType('error')\n        setNotificationMessage('Unable to create new blog post')\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n  }\n\n  const deleteBlog = async (id, blog) => {\n    let permission = window.confirm('remove blog', blog.title, ' by ', blog.author)\n\n    if (permission) {\n\n      try {\n        await blogService\n          .remove(id)\n        setMessageType('success')\n        setNotificationMessage('blog deleted succesfully: ')\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n\n      } catch (e) {\n        setMessageType('error')\n        setNotificationMessage('Unable to delete blog post')\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      }\n\n    }\n\n  }\n\n  const likeBlog = async (id, blog) => {\n    try {\n\n      await blogService\n        .update(id, { 'likes': ++blog.likes })\n      setMessageType('success')\n      setNotificationMessage('you just liked: '.concat(blog.title))\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    } catch (e) {\n      --blog.likes\n      setMessageType('error')\n      setNotificationMessage('Unable to like blog post')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      setMessageType('success')\n      setNotificationMessage('Login Successful')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setMessageType('error')\n      setNotificationMessage('Wrong credentials')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    console.log('logging out /\"', username, '/\"')\n    try {\n      window.localStorage.removeItem('loggedBlogappUser')\n\n      blogService.setToken(null)\n      setUser(null)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setMessageType('error')\n      setNotificationMessage('Unable to Logout')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n  const noteFormRef = useRef()\n\n\n  return (\n    <div>\n      <Notification notificationMessage={notificationMessage || ''} messageType={messageType || ''} />\n\n      {user === null ?\n        <LoginForm\n          username={username}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleLogin}\n        /> :\n        <div>\n          <h2>blogs</h2>\n          <p>\n            {user.name} logged-in\n            <button onClick={handleLogout}>logout</button>\n          </p>\n          <Togglable openButtonLabel='new note' closeButtonLabel='cancel' ref={noteFormRef}>\n            <BlogForm createBlog={addBlog} />\n          </Togglable>\n\n          <div id='blogLists'>\n            {blogs\n              .sort((a, b) => (a.likes < b.likes ? 1 : -1))\n              .map(blog =>\n                <Blog key={blog.id} blog={blog} likeBlog={likeBlog} deleteBlog={deleteBlog} />\n              )}\n          </div>\n\n        </div>\n      }\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}